---
source: testing-tracing-opentelemetry/src/lib.rs
expression: otel_spans
---
- trace_id: "[trace_id:lg32]"
  span_id: "[span_id:lg16]"
  trace_state: ""
  parent_span_id: "[span_id:lg0]"
  name: GET
  kind: SPAN_KIND_SERVER
  start_time_unix_nano: "[timestamp]"
  end_time_unix_nano: "[timestamp]"
  attributes:
    busy_ns: ignore
    code.file.path: "Some(AnyValue { value: Some(StringValue(\"tracing-opentelemetry-instrumentation-sdk/src/http/http_server.rs\")) })"
    code.line.number: "Some(AnyValue { value: Some(IntValue(15)) })"
    code.module.name: "Some(AnyValue { value: Some(StringValue(\"tracing_opentelemetry_instrumentation_sdk::http::http_server\")) })"
    http.request.method: "Some(AnyValue { value: Some(StringValue(\"GET\")) })"
    http.response.status_code: "Some(AnyValue { value: Some(StringValue(\"404\")) })"
    http.route: "Some(AnyValue { value: Some(StringValue(\"\")) })"
    idle_ns: ignore
    network.protocol.version: "Some(AnyValue { value: Some(StringValue(\"1.1\")) })"
    server.address: "Some(AnyValue { value: Some(StringValue(\"\")) })"
    span.type: "Some(AnyValue { value: Some(StringValue(\"web\")) })"
    target: "Some(AnyValue { value: Some(StringValue(\"otel::tracing\")) })"
    thread.id: ignore
    thread.name: "Some(AnyValue { value: Some(StringValue(\"middleware::trace_extractor::tests::check_span_event::case_2\")) })"
    url.path: "Some(AnyValue { value: Some(StringValue(\"/idontexist/123\")) })"
    url.scheme: "Some(AnyValue { value: Some(StringValue(\"\")) })"
    user_agent.original: "Some(AnyValue { value: Some(StringValue(\"\")) })"
  dropped_attributes_count: 0
  events: []
  dropped_events_count: 0
  links: []
  dropped_links_count: 0
  status:
    message: ""
    code: STATUS_CODE_UNSET
